---
title: Combined Experiments
date: last-modified
lightbox: true
toc: true
page-layout: full
format:
  html: 
    grid:
      sidebar-width: 200px
      body-width: 1250px
      margin-width: 140px
      gutter-width: 1.0rem
toc-depth: 3
code-fold: true
code-tools: true
execute: 
  warning: false
  eval: true
---


<br><br>


## Paper Figures

Relevant figures from [@huExemplarmodelAccountCategorization2022; @huHighvariabilityTrainingDoes2024] 

*click on image to enlarge*

::: {.panel-tabset}

### 2022 Paper

::: {layout-nrow=2}
![2022 Learning Curves](/assets/2022_learning_curves.png)

![2022 Test Accuracy](/assets/2022_testAvg.png)

![2022 Model Predictions](/assets/2022_testModel.png)

:::

### 2024 Paper
::: {layout-nrow=2}
![2024 Learning Curves](/assets/2024_learning_curves.png)

![2024 Test Accuracy](/assets/2024_testAvg.png)

![2024 Test Accuracy - Quartile](/assets/2024_testQ.png)

![2024 Model Predictions](/assets/2024_testModel.png)
:::

### Fixed Prototype Pilot

::: {layout-nrow=2}
![Pilot Learning Curves](/assets/fp_pilot_train.png)

![Pilot Test Accuracy](/assets/fp_pilot_test.png)
:::
:::

<br><br>

::: {.column-page-inset-right .smaller}
## Comparison of Dot-Pattern Classification Studies

| Study                 | **Hu & Nosofsky (2022)** | **Hu & Nosofsky (2024)** | **Fixed Prototype Pilot Study** |
|-------------------------|---------------------------|---------------------------|----------------------------------|
| **Publication**         | *JEP: Learning, Memory, and Cognition*   | *Memory & Cognition*        | *(unpublished pilot study)*      |
| **Abbreviation**         | *lmc22*   | *mc24*        | *fixed_proto*      |
| **Participants**        | - 89 Indiana University undergraduates<br>- Course credit participation<br>- Random assignment to conditions (REP or NREP)<br>- Normal or corrected vision  | - 304 Indiana University students<br>- Random assignment to conditions (low, medium, high, or mixed distortion) | Not specified                    |
| **Training Stage**       | **Training Stage**        | **Training Stage**         | **Training Stage**                |
| • **Procedure**         | - **REP Condition:** 15 unique patterns (5 per category), repeated across 15 blocks (**225 trials total**)<br>- **NREP Condition:** 75 unique patterns (5 per category per block), no repetitions (**225 trials total**) | - 10 blocks, 27 trials each (**270 trials total**)<br>- Different set of training patterns in each block<br>- Corrective feedback for 2 seconds after each response | - Training patterns repeated across 10 blocks with randomized presentation order within each block<br>- Four between-subject conditions: low, medium, high, and mixed distortion levels |
| • **Stimuli**           | - 15 or 75 unique dot patterns (depending on condition)<br>- Created using Posner (1967) procedure | - Variable number of unique dot patterns<br>| - 27 unique dot patterns (9 per category)<br> |
| **Testing Stage**       | **Transfer Phase**        | **Testing Stage**         | **Testing Stage**                |
| • **Procedure**         | - 63 trials total<br>- Random order of presentation | - 84 trials total<br>- Random order of presentation | - 87 trials total<br>- Random order of presentation |
| • **Stimuli**           | - 15 old distortions (5 per category)<br>- 3 prototypes (one per category)<br>- 15 low-level distortions (5 per category)<br>- 15 new medium-level distortions (5 per category)<br>- 15 high-level distortions (5 per category) | - 27 old patterns from the training phase (9 per category)<br>- 3 prototypes (one per category)<br>- 9 new low-level distortions (3 per category)<br>- 18 new medium-level distortions (6 per category)<br>- 27 new high-level distortions (9 per category) | - 27 old distortions (9 per category)<br>- 3 prototypes (1 per category)<br>- 9 new low-level distortions (3 per category)<br>- 18 

**Notes:**

- **REP:** Repeating Protocol
- **NREP:** Nonrepeating Protocol
- **Hu & Nosofsky (2022)** investigated the effects of repeating vs. nonrepeating training patterns on category learning and generalization.
- **Hu & Nosofsky (2024)** examined the impact of different training distortion levels on category learning and generalization.
- The **Fixed Prototype Pilot Study** aimed to understand how training pattern variability influences classification learning and generalization using fixed prototypes. 
- All studies used a dot pattern categorization paradigm where participants learned to classify patterns into categories based on visual similarity.
- Dot pattern distortions were created using a modified Posner-Keele (1968) procedure. Low, medium and high distortions displaced the dots by an average of 4, 6, and 7.7 Posner-levels respectively.


:::

-------

<br><br><br><br><br><br>




```{r}

pacman::p_load(dplyr,purrr,tidyr,ggplot2, data.table,readr,here, patchwork, conflicted)
conflict_prefer_all("dplyr", quiet = TRUE)
source(here::here("R/fun_plot.R"))

lmc22 <- readRDS(here("data","lmc22.rds")) |> mutate(Pattern_Token = case_when(
      Pattern.Type2 == "Trained.Med" ~ "old",
      Pattern.Type2 == "Prototype"~ "prototype",
      Pattern.Type2 == "New.Low"  ~ "new_low",
      Pattern.Type2 == "New.Med" ~ "new_med",
      Pattern.Type2 == "New.High" ~ "new_high"
    )) #rename("Pattern_Token"=Pattern.Type2)
mc24 <- readRDS(here("data","mc24.rds"))
fp24 <- readRDS(here("data","fixed_proto24.rds"))

all_data <- fp24 |> select(-pool_index) |> rbind(mc24) |> rbind(lmc22)
all_data$Pattern_Token = factor(all_data$Pattern_Token,levels=c("old","prototype","new_low","new_med","new_high","special")) 
all_data$condit = factor(all_data$condit,levels=c("low","medium","mixed","high","nrep","rep"))
all_data$exp = factor(all_data$exp,levels=c("lmc22","mc24","fixed_proto"))


theme_set(theme_nice())

yt <- round(seq(0,1,length.out=7), 2)
xt <- seq(1,10,1)
eg <- list(geom_hline(yintercept = c(.33, .66),linetype="dashed", alpha=.5),
           scale_y_continuous(breaks=yt,limits=c(0,1)),
           scale_x_continuous(breaks=xt))
```



## Comparison


## Compare Experiments

::: {.panel-tabset}

### Facet by experiment
```{r}
#| fig-width: 13
#| fig-height: 11

theme_set(theme_nice_b())

all_data |> filter(Phase==2, Pattern_Token != "special") |>
  group_by(sbjCode, condit, Pattern_Token,exp) |>
  summarize(Corr=mean(Corr)) |>
  group_by(condit,Pattern_Token,exp) |> 
  summarise(empirical_stat = mean(Corr), 
            sem = sd(Corr)/sqrt(length(Corr)),
            ci_lower = mean(Corr) - sem,
            ci_upper = mean(Corr) + sem) |>
  mutate(method = "standard error") |> 
  ggplot(aes(x=Pattern_Token, y=empirical_stat, col=condit, group=condit)) +  
  geom_point() +
  geom_line(aes(group = condit)) +
  geom_errorbar(aes(ymin = ci_lower, ymax = ci_upper)
                ) +
  facet_wrap(~exp)


```

### alt
```{r}

all_data |> filter(Phase==2) |>
  group_by(sbjCode, condit, Pattern_Token,exp) |>
  summarize(Corr=mean(Corr)) |>
  ggplot(aes(x=condit, y=Corr, col=exp, group=exp)) +  
  stat_summary(geom="line",fun=mean)+
  stat_summary(geom="errorbar", fun.data=mean_se) +
  facet_wrap(~Pattern_Token,scales="free_x") +
  labs(title="Testing Performance - All Sbjs.", y="Accuracy") 


all_data |> filter(Phase==2, Pattern_Token != "special") |>
  group_by(sbjCode, condit, Pattern_Token,exp) |>
  summarize(Corr=mean(Corr)) |>
  ggplot(aes(x=Pattern_Token, y=Corr, col=condit, group=condit)) +  
  stat_summary(geom="line",fun=mean)+
  stat_summary(geom="errorbar", fun.data=mean_se) +
  facet_wrap(~exp,scales="free_x") +
  labs(title="Testing Performance - All Sbjs.", y="Accuracy") 
```

:::


## Training Comparison

::: {.panel-tabset}

### Training Comparison
```{r}
#| fig-width: 12
#| fig-height: 10
###| layout-ncol: 2 
all_data |> filter(Phase==1) |>
  group_by(sbjCode, condit, Pattern_Token,Block,exp) |>
  summarize(Corr=mean(Corr),.groups="keep") |>
  ggplot(aes(x=Block, y=Corr, color=interaction(condit,exp))) +  
  stat_summary(geom="line",fun=mean)+
  stat_summary(geom="errorbar", fun.data=mean_se,width=.1) +
  labs(title="Testing Performance - All Sbjs.", y="Accuracy") +
  #eg +  
  theme(legend.position = "top") + list(geom_hline(yintercept = c(.33, .66),linetype="dashed", alpha=.5),
           scale_y_continuous(breaks=yt,limits=c(0,1)),
           scale_x_continuous(breaks=seq(1:15)))


```


### Alt
```{r}

all_data |> filter(Phase==1) |>
  group_by(sbjCode, condit, Pattern_Token,Block,exp) |>
  summarize(Corr=mean(Corr),.groups="keep") |>
  ggplot(aes(x=Block, y=Corr, color=condit)) +  
  stat_summary(geom="line",fun=mean)+
  stat_summary(geom="errorbar", fun.data=mean_se,width=.1) +
  facet_wrap(~exp,scales="free_x") + 
  labs(title="Testing Performance - All Sbjs.", y="Accuracy") +
  #eg +  
  theme(legend.position = "top") + list(geom_hline(yintercept = c(.33, .66),linetype="dashed", alpha=.5),
           scale_y_continuous(breaks=yt,limits=c(0,1)),
           scale_x_continuous(breaks=seq(1:15)))
```

::: 


## Separated by Experiment

::: {.panel-tabset}


### p1
```{r}
#| layout-ncol: 2 


fp24 |> filter(Phase==2) |>
  group_by(sbjCode, condit, Pattern_Token) |>
  summarize(Corr=mean(Corr)) |>
  ggplot(aes(x=Pattern_Token, y=Corr, fill=condit, group=condit)) +  
  stat_summary(geom="bar",fun=mean, position=position_dodge())+
  stat_summary(geom="errorbar", fun.data=mean_se, position=position_dodge()) +
  labs(title="Testing Performance - All Sbjs.", y="Accuracy") 

fp24 |> filter(Phase==2) |>
  group_by(sbjCode, condit, Pattern_Token) |>
  summarize(Corr=mean(Corr)) |>
  ggplot(aes(x=condit, y=Corr, fill=Pattern_Token, group=Pattern_Token)) +  
  stat_summary(geom="bar",fun=mean, position=position_dodge())+
  stat_summary(geom="errorbar", fun.data=mean_se, position=position_dodge()) +
  labs(title="Testing Performance - All Sbjs.", y="Accuracy") 


fp24 |> filter(Phase==1) |>
  group_by(sbjCode, condit, Pattern_Token,Block) |>
  summarize(Corr=mean(Corr),.groups="keep") |>
  ggplot(aes(x=Block, y=Corr, col=condit, group=condit)) +  
  stat_summary(geom="line",fun=mean)+
  stat_summary(geom="errorbar", fun.data=mean_se,width=.1) +
  labs(title="Testing Performance - All Sbjs.", y="Accuracy") +
  #eg +  
  theme(legend.position = "top") + eg
  


lmc22 |> filter(Phase==2) |>
  group_by(sbjCode, condit, Pattern_Token) |>
  summarize(Corr=mean(Corr)) |>
  ggplot(aes(x=condit, y=Corr, fill=Pattern_Token, group=Pattern_Token)) +  
  stat_summary(geom="bar",fun=mean, position=position_dodge())+
  stat_summary(geom="errorbar", fun.data=mean_se, position=position_dodge()) +
  labs(title="Testing Performance - All Sbjs.", y="Accuracy") 

```


### p2

```{r}
#| fig-width: 11
#| fig-height: 13
#| layout-ncol: 2 
#| fig-cap: 
#|   - "Line Plot 1"
#|   - "Line Plot 2"
#|   - "Line Plot 4"
#|   - "Line Plot 5"

all_data |> filter(Phase==2) |>
  group_by(sbjCode, condit, Pattern_Token) |>
  summarize(Corr=mean(Corr)) |>
  ggplot(aes(x=condit, y=Corr, fill=Pattern_Token, group=Pattern_Token)) +  
  stat_summary(geom="bar",fun=mean, position=position_dodge())+
  stat_summary(geom="errorbar", fun.data=mean_se, position=position_dodge()) +
  labs(title="Testing Performance - All Sbjs.", y="Accuracy") 

all_data |> filter(Phase==2) |>
  group_by(sbjCode, condit, Pattern_Token,exp) |>
  summarize(Corr=mean(Corr)) |>
  ggplot(aes(x=condit, y=Corr, fill=Pattern_Token, group=Pattern_Token)) +  
  stat_summary(geom="bar",fun=mean, position=position_dodge())+
  stat_summary(geom="errorbar", fun.data=mean_se, position=position_dodge()) +
  facet_wrap(~exp,scales="free_x") +
  labs(title="Testing Performance - All Sbjs.", y="Accuracy") 

all_data |> filter(Phase==2) |>
  group_by(sbjCode, condit, Pattern_Token,exp) |>
  summarize(Corr=mean(Corr)) |>
  ggplot(aes(x=exp, y=Corr, fill=Pattern_Token, group=Pattern_Token)) +  
  stat_summary(geom="bar",fun=mean, position=position_dodge())+
  stat_summary(geom="errorbar", fun.data=mean_se, position=position_dodge()) +
  facet_wrap(~condit,scales="free_x") +
  labs(title="Testing Performance - All Sbjs.", y="Accuracy") 

all_data |> filter(Phase==2) |>
  group_by(sbjCode, condit, Pattern_Token,exp) |>
  summarize(Corr=mean(Corr)) |>
  ggplot(aes(x=condit, y=Corr, fill=exp, group=exp)) +  
  stat_summary(geom="bar",fun=mean, position=position_dodge())+
  stat_summary(geom="errorbar", fun.data=mean_se, position=position_dodge()) +
  facet_wrap(~Pattern_Token,scales="free_x") +
  labs(title="Testing Performance - All Sbjs.", y="Accuracy") 

```

:::